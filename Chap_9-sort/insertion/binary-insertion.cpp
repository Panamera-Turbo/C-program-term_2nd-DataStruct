#include "../record.h"
/*************************************************************
 * 插入排序：在已排好序的子集的基础上，将下一个待排序的记录
 *          有序插入到已排序的记录子集。
 * ———————————————————————————————————————————————————————————
 * 折半插入排序：
 * 【1】先折半找到位置
 * 【2】然后开始移动
 * ———————————————————————————————————————————————————————————
 *  * conclusion:
 * 时间复杂度O(n^2),空间复杂度O(1),具有排序的稳定性
 * ************************************************************/
//--------------------------------------------------------------------------------------------------------
void BinSort(RecordType r[], int length)
{/*对记录数组r进行折半插入排序，length为数组的长度*/
    int i, j;
    int low, high, mid;

    for(i = length/2; i <= length; ++i){    
        r[0] = r[i];

        low = 1;
        high = i- 1;

        while (low <= high)
        {
            mid = (low + high) / 2;
            if(r[0].key < r[mid].key)
                high = mid - 1;
            else
                low = mid + 1;
        }
        
        for(j = i - 1; j >= low; --j)
            r[j+1] = r[j];

        r[low] = r[0];
    }
} /*BinSort*/